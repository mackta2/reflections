What happens when you initialize a repository? Why do you need to do it?

When you initialize a repository, you create a place for the meta data and all associated files.

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area allows you to place the files that you have made logical changes.  It provides a holding place for files before you make a commit.  

How can you use the staging area to make sure you have one commit per logical change?  

You can use git diff --staged to check your changes before you commit.

What are some situations when branches would be helpful in keeping your history organized?  

I can create branches for differing types of changes/ additions to my files without impacting the foundational (main) branch.  If I decide to go in another direction, I can discard the branch.

How would branches help?  It helps me to keep track of organizaitonal changes.

How do the diagrams help you visualize the branch structure?  Helps to to keep track of major changes or categories and commits within those categories.

Describe the differences between forks, clones, and branches. When would you use one instead of another?  It depends on what you want to accomplish.  Depending on where you are operating: either a local repository or a Git Hub repository.  Also, forks and clones are used exclusively on Git Hub.  

Now that you've seen how to update your local copy of remote branches, and how to combine conflicting changes from multiple people, add the following question and your thoughts on it to your reflections file:

What is the benefit of having a copy of the last known state of the remote stored locally?  I will know the state of my local branch and be able to compare it with branches on Git Hub.  If I am off line, I will never lose a history of changes, additions or deletions.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

It would be harder to keep up with the edits by various users.  No sense of timeline changes.